---
title: "Cyclistic Case Study Report"
execute:
  eval: false
---

## Introduction

Cyclistic is a (fictional) bike-share company based in Chicago. Launched in 2016, Cyclistic has provided over 5800 bicycles across a network of roughly 700 stations throughout the city. The director of marketing, Lily Moreno, intends to maximize the number of annual members so as to ensure the company's long-term financial growth. The pricing plans comprise single-ride passes, full-day passes, and annual memberships, with casual riders defined as those who use either single-ride or full-day passes.

Moreno has decided to design marketing strategies focused on converting the casual riders into members. Therefore, she needs the analytics team to understand how usage patterns differ between the two groups. By analyzing historical ride data, the team will be able to uncover key trends to refine marketing strategies with the aim of achieving this goal.

## Ask

The main problem of this project is how casual customers and members use the service differently. To solve this, Cyclistic ride data must be analyzed for any valuable trends and patterns to shape further marketing strategies.

## Prepare

The dataset for this analysis contains 12 monthly CSV files (January–December 2024) sourced from [Motivate International Inc](https://divvy-tripdata.s3.amazonaws.com/index.html). under their [data license agreement](https://divvybikes.com/data-license-agreement). The raw ZIP files were downloaded and extracted, then read into R for merging and analysis. The original data has 13 columns and 5.86 million rows. The imported data has 14 columns since we added `source_file` while combining.\

```{r}
#| eval: true
#| message: false
library(future.apply)
library(skimr)
library(scales)
library(janitor)
library(hms)
library(plotly)
library(htmlwidgets)
library(htmltools)
library(tidyverse)
library(DT)
```

```{r}
# Enable parallel processing (for faster processing)
plan(multisession)

# combine the data
data_files <- list.files("data/2024-divvy-tripdata", full.names = TRUE)
combined_data <- future_lapply(data_files, function(x) {
  read_csv(x) |> 
    mutate(source_file = basename(x))  
}) |> 
  bind_rows()

# Disable parallel processing
plan(sequential)
```

The dataset seems to have the following issues at first glance:

-   There is no column specifying the user identifier, meaning that multiple rides might be submitted by one user.

-   4 columns referring to stations' names and IDs have missing values.

-   2 columns referring to destination coordination (latitude and longitude) also have missing values.

## Process

Two columns `ride_length` and `day_of_week` were added to the dataset. `ride_length` shows the duration of the ride and `day_of_week` refers to the day of the week the ride took place. Next, any rides with `ride_length` equal to or less than 0 seconds were filtered out. Column names were standardized (using `janitor::clean_names()`) and a preliminary overview of our modified dataset was generated.

```{r}
# adding the columns "ride_length" and "day_of_week"
df <- combined_data |>
  mutate(ride_length = as_hms(as.numeric(ended_at - started_at, units = "secs")),
         day_of_week = wday(started_at, label = TRUE, abbr = FALSE))

# filterign out rides with duration <= 0
df <-  df |> filter(!ride_length <= 0)

# cleaning the column names
df <- clean_names(df)

# overview of the data
skim(df)
glimpse(df)
```

The **tidyverse** package served as the main tool used for data manipulation, analysis, and visualization. The **hms** package proved useful for hh:mm:ss format of `ride_length` values. The **skimr** package was applied to provide an overview of the data frame. I also employed **plotly** to generate interactive plots in the report which is in html format. The entire workflow throughout this project was conducted in **Posit's Rstudio**.

## Analyze & Share

Comparing the number of rides between members and casual riders shows:

-   2.15 million rides were submitted by casual riders which constitute 37% of all rides.

-   3.71 million rides were submitted by annual members which constitute 63% of rides, nearly double the rides taken by casual riders.

```{r}
# changing the default theme to minimal
theme_set(
  theme_minimal())

# defining custom settings
custom_settings <- list(
    scale_x_discrete(labels = c("Casual", "Member")),
    scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())),
    scale_fill_brewer(palette = "Dark2"),
    scale_color_brewer(palette = "Dark2"),
    labs(x = NULL, y = NULL)
    )

# number of rides for each group
plot_1 <- df |> ggplot(aes(x = member_casual, fill = member_casual)) +
  geom_bar(show.legend = F) +
  geom_text(aes(label = after_stat((prop * 100) |>
                                     round(1) |>
                                     paste0("%")),
                group = 1,
                y = after_stat(count)/2),
            size = 8,
            stat = "count",
            show.legend = F) +
  labs(title = "Number of rides per group") +
  custom_settings

ggplotly(plot_1,  tooltip = c("x", "count")) |>
  hide_legend()
```

```{r}
#| eval: true
#| echo: false
#| out.width: "100%"

htmltools::tags$iframe(
  src = "Quarto_imported_files/interactive_plot_1.html",
  width = "100%",
  height = "500px",
  scrolling = "no",
  frameborder = "0"
)
```

By calculating the summary statistics for duration of each ride, we can see that:

-   On average, casual riders' rides lasted twice as long as annual members'.

-   Higher standard deviation for casual riders' `ride_length` indicates that their ride durations are much more spread out than those of members.

-   Median of `ride_length` is smaller than the mean; which could be due to extreme high values ( \> 24-hour rides) in the data.

-   As mean is sensitive to extreme values, median can better represent the typical ride experience of each group.

```{r}
#| echo: false
#| eval: true
ride_length_by_group_summary <- readRDS("Quarto_imported_files/ride_length_summary.rds")
```

```{r}
# calculating the summarizations and deviations for each group
ride_length_by_group_summary <- df |> 
  group_by(member_casual) |>
  summarise(ride_length_avg = as_hms(mean(ride_length)),
            ride_length_sd = as_hms(sd(ride_length)),
            ride_length_median = median(ride_length),
            ride_length_Q1 = quantile(ride_length, 0.25),
            ride_length_Q3 = quantile(ride_length, 0.75),
            n = n())
```

```{r}
#| eval: true
ride_length_by_group_summary |>
  mutate(
    across(c(ride_length_avg, ride_length_sd, ride_length_median, ride_length_Q1, ride_length_Q3), 
                ~ hms::round_hms(., digits = 0))) |>
  knitr::kable()
```

 

-   Members have higher ride frequency, but casual riders’ median ride duration is longer.

-   Moreover, as mentioned before, casual riders vary more than members in ride duration.

```{r}
# median of ride length plot
median_ride_duration_difference_plot <- ride_length_by_group_summary |>
  ggplot(aes(x = member_casual,
             colour = member_casual,
             text = paste(
               "Group:", member_casual,
               "<br>Median:", format(as_hms(round(ride_length_median, 0)), "%H:%M:%S"),
               "<br>Q1:", format(as_hms(round(ride_length_Q1, 0)), "%H:%M:%S"),
               "<br>Q3:", format(as_hms(round(ride_length_Q3, 0)), "%H:%M:%S"),
               "<br>Sample size:", format(n, big.mark = ",")
             ))) +
  geom_pointrange(
    aes(
    y = ride_length_median,
    ymin = ride_length_Q1,
    ymax = ride_length_Q3,
    size = n
    ),
    linewidth = 1.5,
    show.legend = FALSE) +
  scale_size_continuous(
    range = c(2,4) 
  ) +
  labs(
       title = "Ride Duration: Casual vs. Member",
       subtitle = "Median, Interquartile range and sample size of ride_length") +
  custom_settings +
  scale_y_continuous(
    labels = function(x) format(hms::hms(round(x)), "%H:%M:%S")
  )
```

```{r}
# make interactive with ggplotly
median_ride_duration_difference_plot |> 
  ggplotly(
    tooltip = "text") |> 
  hide_legend()
```

```{r}
#| eval: true
#| echo: false
#| out.width: "100%"

htmltools::tags$iframe(
  src = "Quarto_imported_files/median_ride_duration_interactive_plot.html",
  width = "100%",
  height = "500px",
  scrolling = "no",
  frameborder = "0"
)
```

The trends in usage patterns for ride types are as follows:

-   Members and casual riders are more likely to prefer bikes over scooters, with electric bikes being the most popular type of ride.

-   While members use bikes more frequently than casual riders, scooter usage is similar across both groups, with casual riders opting for scooters slightly more often.

-   Casual riders tend to use classic bikes for longer rides, unlike members or other rideable types.

```{r}
# number of rides for type by group
rides_by_type <- df |> ggplot(aes(x = rideable_type)) +
  geom_bar(aes(fill = member_casual),
           position = 'dodge') +
  custom_settings +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  scale_x_discrete(labels = c("Classic Bike", "Electric Bike", "Electric Scooter")) +
  labs(
    title = "Number of Rides by Type and Group"
  ) +
  theme(
    legend.title = element_blank()
  )

# make interactive
ggplotly(rides_by_type) |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |> 
  layout(
    legend = list(title = list(text = ""))  # Remove title
  )

# ride length median by type and group 
ride_length_by_type <- df |> 
  group_by(rideable_type, member_casual) |>
  summarise(duration_median = median(ride_length), .groups = "drop") |>
  ggplot(aes(x = rideable_type, y = duration_median, fill = member_casual)) +
  geom_col(position = "dodge") +
  scale_x_discrete(labels = c("Classic Bike", "Electric Bike", "Electric Scooter")) +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  labs(
    x = NULL,
    y = NULL,
    title = "Median of Ride Duration for each Ride Type and Group"
  ) +
  theme(
    legend.title = element_blank()
  )

# make interactive
ggplotly(ride_length_by_type) |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |> 
  layout(
    legend = list(title = list(text = ""))  # Remove title
  )
```

```{r}
#| label: toggle-plots1
#| echo: false
#| eval: true

# Common plot container styles
hidden_style <- "position: absolute; top: 0; left: 0; visibility: hidden; height: 0;"
visible_style <- "position: relative; visibility: visible; height: auto;"

toggle_ui_bytype <- tags$div(
  style = "margin: 20px 0; position: relative;",
  tags$div(
    style = "margin-bottom: 15px;",
    tags$button(
      "Show Ride Counts",
      onclick = "showPlot('plot1')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Duration", 
      onclick = "showPlot('plot2')",
      class = "btn btn-primary"
    )
  ),
  # Plot containers (initially: plot1 is visible)
  tags$div(
    id = "plot1",
    style = visible_style,
    tags$iframe(
      src = "Quarto_imported_files/rides_by_type_interactive_plot.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "plot2",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_ride_length_by_type.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  # JavaScript to toggle visibility without reload
  tags$script(HTML("
    function showPlot(plotId) {
      ['plot1', 'plot2'].forEach(function(id) {
        const el = document.getElementById(id);
        if (id === plotId) {
          el.style.visibility = 'visible';
          el.style.position = 'relative';
          el.style.height = 'auto';
        } else {
          el.style.visibility = 'hidden';
          el.style.position = 'absolute';
          el.style.height = '0';
        }
      });
    }
  "))
)


# Render the UI
toggle_ui_bytype
```

Analysis of weekly usage patterns yields several noteworthy differences between the two groups of users:

-   Members consistently took more rides than casual riders daily, but their usage peaked at different times.

-   The proportion of casual riders surges on weekends, while the majority of members favor weekdays.

-   The median of ride length for casual riders is longer than members' for every day of a week, with weekends containing the longer rides for both groups.

```{r}
# number of rides for weekdays by group
weekday_rides <- df |> ggplot(aes(x = day_of_week)) +
  geom_bar(aes(fill = member_casual),
           position = 'dodge') + 
  labs(x = NULL, y = NULL, title = "Number of Rides by Day of the Week and Group") +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  theme(
    legend.title = element_blank()
  )

# rides by weekdays interactive
ggplotly(weekday_rides) |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |> 
  layout(
    legend = list(title = list(text = ""))
  )

# percentage of rides of each group for weekdays
weekday_prides <- df |> 
  ggplot(aes(x = day_of_week)) +
  geom_bar(
    aes(
      fill = member_casual,
      y = after_stat(prop),
      group = member_casual,
      text = after_stat(
        paste0("Day: ", levels(df$day_of_week), "<br>",
               "Group: ", ifelse(group == 1, "Casual", "Member"), "<br>",
               "Percentage: ", scales::percent(prop)))
      ),
      position = 'dodge'
    ) + 
      labs(x = NULL, y = NULL, title = "Percentage of Rides by Day of the Week within each Group") +
      scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
      scale_y_continuous(labels = label_percent()) +
      theme(
        legend.title = element_blank()
      )

# percentage of rides by weekdays interactive
ggplotly(weekday_prides, tooltip = "text") |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |> 
  layout(
    legend = list(title = list(text = ""))
  )

# ride length median by weekday and group
weekday_ridelength <- df |>
  group_by(day_of_week, member_casual) |>
  summarize(duration_median = median(ride_length), .groups = "drop") |>
  ggplot(aes(x = day_of_week, y = duration_median, colour = member_casual)) +
  geom_line(aes(group = member_casual), linewidth = 1) +
  geom_point(size = 2) +
  scale_color_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  scale_y_time(limits = c(0, NA)) +
  labs(x = NULL, y = NULL, title = "Median of Ride Duration for each Weekday by Group") +
  theme(legend.title = element_blank())

# ride length median by weekday interactive
ggplotly(weekday_ridelength) |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )
```

```{r}
#| label: toggle-plots2
#| echo: false
#| eval: true

visible_style <- "position: relative; visibility: visible; height: auto; overflow: visible;"
hidden_style <- "position: absolute; visibility: hidden; height: 0; overflow: hidden;"

toggle_ui_weekly <- tags$div(
  style = "margin: 20px 0; position: relative;",
  tags$div(
    style = "margin-bottom: 15px;",
    tags$button(
      "Show Ride Counts",
      onclick = "showWeeklyPlot('weekly_plot1')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Percentage", 
      onclick = "showWeeklyPlot('weekly_plot2')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Duration", 
      onclick = "showWeeklyPlot('weekly_plot3')",
      class = "btn btn-primary"
    )
  ),
  tags$div(
    id = "weekly_plot1",
    style = visible_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_weekday_rides.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "weekly_plot2",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_weekday_prides.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "weekly_plot3",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_weekday_ridelength.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$script(HTML("
    function showWeeklyPlot(plotId) {
      ['weekly_plot1', 'weekly_plot2', 'weekly_plot3'].forEach(function(id) {
        const el = document.getElementById(id);
        if (id === plotId) {
          el.style.visibility = 'visible';
          el.style.position = 'relative';
          el.style.height = 'auto';
          el.style.overflow = 'visible';
        } else {
          el.style.visibility = 'hidden';
          el.style.position = 'absolute';
          el.style.height = '0';
          el.style.overflow = 'hidden';
        }
      });
    }
  "))
)

toggle_ui_weekly
```

An analysis of monthly usage trends reveals the following insights:

-   Ride counts for both groups rise in the summer months, peak in September, and decline to their lowest levels during winter.

-   While members consistently submit more rides than casual users throughout the year, the proportion of casual riders increases from May to September, surpassing that of members during these months.

-   Duration of rides are also higher during summer for both groups. Casual riders have longer median of ride length than members in every month of the year.

```{r}
# number of rides for each month by group
month_rides <- df |> mutate(month_of_year = month(started_at, label = TRUE)) |>
  ggplot(aes(x = month_of_year)) +
  geom_bar(aes(fill = member_casual), position = "dodge") +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  labs(
    x = NULL,
    y = NULL,
    title = "Number of Rides by Month and Group"
  ) +
  theme(legend.title = element_blank())

# rides for each month interactive
ggplotly(month_rides) |>
  style(
    traces = 1, 
    name = "Casual"  
  ) |> 
  style(
    traces = 2, 
    name = "Member" 
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )

# percentage of rides of each group for each month
month_prides <- df |> mutate(month_of_year = month(started_at, label = TRUE)) |>
  ggplot(aes(x = month_of_year, fill = member_casual)) +
  geom_bar(aes(group = member_casual,
               y = after_stat(prop),
               text = paste0(
                 "Month: ", month.abb, "<br>",
                 "Group: ", ifelse(group == 1, "Casual", "Member"), "<br>",
                 "Percentage: ", scales::percent(after_stat(prop))
                            )
              )
           , position = "dodge"
           ) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  labs(x = NULL, y = NULL, title = "Percentage of Rides by Month within each Group") +
  theme(legend.title = element_blank())

# percentage of rides for months interactive
ggplotly(month_prides, tooltip = "text") |>
  style(
    traces = 1,
    name = "Casual"
  ) |>
  style(
    traces = 2,
    name = "Member"
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )

# ride length median for each month by group
month_ride_length <- df |> mutate(month_of_year = month(started_at, label = TRUE)) |>
  group_by(month_of_year, member_casual) |>
  summarise(ride_length_median = median(ride_length), .groups = "drop") |>
  ggplot(aes(x = month_of_year,
             y = ride_length_median,
             colour = member_casual)) +
  geom_line(aes(group = member_casual), linewidth = 1) +
  scale_y_time(limits = c(0, NA)) +
  scale_color_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  labs(x = NULL, y = NULL, title = "Median of Ride Duration for each Month by Group") +
  theme(
    legend.title = element_blank()
  )

# ride length median by month interactive
month_ride_length |>
  ggplotly(tooltip = c("x", "y", "colour")) |>
  style(
    traces = 1,
    name = "Casual"
  ) |>
  style(
    traces = 2,
    name = "Member"
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )
```

```{r}
#| label: toggle-plots3
#| echo: false
#| eval: true

visible_style <- "position: relative; visibility: visible; height: auto; overflow: visible;"
hidden_style <- "position: absolute; visibility: hidden; height: 0; overflow: hidden;"

toggle_ui_month <- tags$div(
  style = "margin: 20px 0; position: relative;",
  tags$div(
    style = "margin-bottom: 15px;",
    tags$button(
      "Show Ride Counts",
      onclick = "showMonthPlot('month_plot1')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Percentage", 
      onclick = "showMonthPlot('month_plot2')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Duration", 
      onclick = "showMonthPlot('month_plot3')",
      class = "btn btn-primary"
    )
  ),
  tags$div(
    id = "month_plot1",
    style = visible_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_month_rides.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "month_plot2",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_month_prides.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "month_plot3",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_month_ridelength.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$script(HTML("
    function showMonthPlot(plotId) {
      ['month_plot1', 'month_plot2', 'month_plot3'].forEach(function(id) {
        const el = document.getElementById(id);
        if (id === plotId) {
          el.style.visibility = 'visible';
          el.style.position = 'relative';
          el.style.height = 'auto';
          el.style.overflow = 'visible';
        } else {
          el.style.visibility = 'hidden';
          el.style.position = 'absolute';
          el.style.height = '0';
          el.style.overflow = 'hidden';
        }
      });
    }
  "))
)

toggle_ui_month
```

The figures regarding the rides in different hours of the day imply that:

-   Most of the rides take place in the afternoon, especially between 3 PM and 6 PM.

-   While the majority of casual riders register during the afternoon, members show some increases in the early morning hours, namely 6 AM and 7 AM.

-   Regarding the ride duration, data for casual riders show more variability throughout the day and is significantly longer than that of members'.

```{r}
# number of rides for hour of day by group
hour_rides <- df |>
  mutate(hour_of_day = hour(started_at)) |>
  ggplot(aes(x = hour_of_day)) +
  geom_bar(aes(fill = member_casual)) +
  scale_x_continuous(
    breaks = seq(0, 23, by = 2),  # Major breaks every 2 hours
    labels = paste0(seq(0, 23, by = 2), "h"),  # Add "h" suffix
    expand = c(0, 0)
  ) +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  scale_fill_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  labs(x = NULL, y = NULL, title = "Number of Rides in each Hour of Day") +
  theme(
    legend.title = element_blank()
  )

# number of rides per hour interactive
ggplotly(hour_rides) |>
  style(
    traces = 1,
    name = "Casual"
  ) |>
  style(
    traces = 2,
    name = "Member"
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )

# ride duration median for hour of day by group
hour_ride_length <- df |>
  mutate(hour_of_day = hour(started_at)) |>
  group_by(hour_of_day, member_casual) |>
  summarize(ride_length_median = median(ride_length), .groups = "drop") |>
  ggplot(aes(x = hour_of_day, y = ride_length_median)) +
  geom_line(aes(colour = member_casual), linewidth = 1) +
  scale_x_continuous(
    breaks = seq(0, 23, by = 2),
    labels = paste0(seq(0, 23, by = 2), "h"),
    expand = c(0, 0)
  ) +
  scale_colour_brewer(palette = "Dark2", labels = c("Casual", "Member")) +
  scale_y_time(limits = c(0, NA)) +
  labs(x = NULL, y = NULL, title = "Median of Ride Duration by Hour of Day in each Group") +
  theme(
    legend.title = element_blank()
  )

# ride duration for hour interactive
ggplotly(hour_ride_length) |>
  style(
  traces = 1,
  name = "Casual"
  ) |>
  style(
    traces = 2,
    name = "Member"
  ) |>
  layout(
    legend = list(title = list(text = ""))
  )
```

```{r}
#| label: toggle-plots4
#| echo: false
#| eval: true

visible_style <- "position: relative; visibility: visible; height: auto; overflow: visible;"
hidden_style <- "position: absolute; visibility: hidden; height: 0; overflow: hidden;"

toggle_ui_hour <- tags$div(
  style = "margin: 20px 0; position: relative;",
  tags$div(
    style = "margin-bottom: 15px;",
    tags$button(
      "Show Ride Counts",
      onclick = "showHourPlot('hour_plot1')",
      class = "btn btn-primary"
    ),
    tags$button(
      "Show Ride Duration", 
      onclick = "showHourPlot('hour_plot2')",
      class = "btn btn-primary"
    ),
  ),
  tags$div(
    id = "hour_plot1",
    style = visible_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_hour_rides.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$div(
    id = "hour_plot2",
    style = hidden_style,
    tags$iframe(
      src = "Quarto_imported_files/interactive_hour_ride_length.html",
      style = "width: 100%; height: 600px; border: none;"
    )
  ),
  tags$script(HTML("
    function showHourPlot(plotId) {
      ['hour_plot1', 'hour_plot2'].forEach(function(id) {
        const el = document.getElementById(id);
        if (id === plotId) {
          el.style.visibility = 'visible';
          el.style.position = 'relative';
          el.style.height = 'auto';
          el.style.overflow = 'visible';
        } else {
          el.style.visibility = 'hidden';
          el.style.position = 'absolute';
          el.style.height = '0';
          el.style.overflow = 'hidden';
        }
      });
    }
  "))
)

toggle_ui_hour
```

The tables below show the number of rides registered at starting and destination stations, respectively, divided by user group.

```{r}
# number of rides for starting stations by group
start_station_count <- df |> 
  count(start_station_name, member_casual) |>
  rename(n_rides_start = n,
         station_name = start_station_name) |>
  arrange(desc(n_rides_start)) |>
  filter(!is.na(station_name))
```

```{r}
#| eval: true
#| echo: false

# loading the start_station_count rds file that was saved in the R file
start_station_count <- readRDS("Quarto_imported_files/start_station_count.rds")
```

```{r}
#| eval: true

# number of rides for starting stations by group interactive
datatable(
  start_station_count,
  options = list(
    pageLength = 10,
    lengthMenu = list(c(10, 20, 30, 40, 50), c('10', '20', '30', '40', '50'))
  ),
  extensions = c('Buttons'),
  class = 'stripe hover'
)
```

```{r}
# number of rides for destination stations by group
end_station_count <- df |> 
  count(end_station_name, member_casual) |>
  rename(n_rides_end = n,
         station_name = end_station_name) |>
  arrange(desc(n_rides_end)) |>
  filter(!is.na(station_name))
```

```{r}
#| eval: true
#| echo: false

# loading the end_station_count rds file that was saved in the R file
end_station_count <- readRDS("Quarto_imported_files/end_station_count.rds")
```

```{r}
#| eval: true

# number of rides for destination stations by group interactive
datatable(
  end_station_count,
  options = list(
    pageLength = 10,
    lengthMenu = list(c(10, 20, 30, 40, 50), c('10', '20', '30', '40', '50'))
  ),
  extensions = c('Buttons'),
  class = 'stripe hover'
)
```

 

By combining the ride count of both start and end stations and then inspecting the numbers, several points can be observed:

-   Both "Streeter Dr & Grand Ave" and "DuSable Lake Shore Dr & Monroe St" stations are wildly popular among casual riders either as a starting point or as a destination.

-   The rides submitted at "Streeter Dr & Grand Ave" station are roughly 45000 more than that of members' most popular station, "Kingsbury St & Kinzie St".

-   There is no overlap among the top 10 popular stations of the two groups.

```{r}
# combining the number of rides for start and end stations
total_station_count <- start_station_count |>
  full_join(end_station_count) |>
  mutate(total_station_n = n_rides_start + n_rides_end) |>
  arrange(desc(total_station_n))

# plotting the number of total rides of stations by group
total_station_rides <- total_station_count |>
  group_by(member_casual) |>
  slice_max(total_station_n, n = 10) |>
  arrange(desc(total_station_n)) |>
  ungroup() |>
  ggplot(aes(x = fct_reorder(station_name, total_station_n) |> fct_rev(),
             y = total_station_n)) +
  geom_col(aes(fill = member_casual), show.legend = F) +
  facet_wrap(~ member_casual, scales = "free_x") +
  labs(x = "Top 10 used stations", y = NULL, title = "Number of Rides for the 10 Most Used Stations per Group") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.title.x = element_text(margin = margin(t = 20))
        ) +
  scale_fill_brewer(palette = "Dark2")

# total station rides plot interactive
ggplotly(total_station_rides) |>
  hide_legend()
```

```{r}
#| eval: true
#| echo: false
#| out.width: "100%"

htmltools::tags$iframe(
  src = "Quarto_imported_files/interactive_total_station.html",
  width = "100%",
  height = "700px",
  scrolling = "no",
  frameborder = "0"
)
```

## Act

To recap, casual riders typically tend to use bikes during their leisure time, take longer rides, and often favor specific stations.

Here are the top 3 recommendation:

-   Increase advertising efforts at stations frequently visited by casual riders to maximize outreach.

-   Launch a special membership plan for the summer months.

-   Provide members with escalating discounts based on ride length—longer rides, bigger savings.
